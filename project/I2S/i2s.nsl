
#include "i2s.inc"

module i2s{
	
	reg prev_LRCLK0,prev_LRCLK1;
	reg dataR[DATA_BIT];
	reg dataL[DATA_BIT];

	wire reset_R;
	wire reset_L;


	prev_LRCLK0 := LRCLK;
	prev_LRCLK1 := prev_LRCLK0;


	reset_R= ~prev_LRCLK1 & prev_LRCLK0;
	reset_L= prev_LRCLK1 & ~prev_LRCLK0;
	//reset_R= ~prev_LRCLK0 & LRCLK;
	//reset_L= prev_LRCLK0 & ~LRCLK;

	if(reset_R) dataR:=0;
	if(reset_L) dataL:=0;

	Ldata = dataL;
	Rdata = dataR;

	Lout = reset_R;
	Rout = reset_L;


	if( ~reset_R & ~reset_L & ~prev_LRCLK1 ){
		dataL := { dataL[DATA_BIT-2:0], DATA}; 
	}

	if( ~reset_R & ~reset_L & prev_LRCLK1 ){
		dataR := { dataR[DATA_BIT-2:0], DATA}; 
	}
}

